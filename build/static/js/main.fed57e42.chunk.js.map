{"version":3,"sources":["img/bg.png","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledInfo.js","components/Info.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledTetris.js","gameHelpers.js","Hooks/useStage.js","Hooks/useGameStatus.js","components/Tetris.js","Hooks/usePlayer.js","Hooks/useInterval.js","App.js","index.js"],"names":["module","exports","StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","length","React","memo","StyledStage","height","width","Stage","stage","map","row","cell","index","key","StyledDisplay","gameOver","Display","text","StyledInfo","StyledStartButton","button","StartButton","callback","onClick","StyledTetrisWrapper","bgImage","StyledTetris","createStage","Array","from","fill","checkCollision","player","moveX","x","moveY","y","tetromino","pos","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","acc","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","dropPlayer","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","keyCode","move","onKeyUp","Info","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fed57e42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  background: rgba(${props => props.color}, 0.8);\r\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${props => props.color}, 0.1);\r\n  border-right-color: rgba(${props => props.color}, 1);\r\n  border-top-color: rgba(${props => props.color}, 1);\r\n  border-left-color: rgba(${props => props.color}, 0.2);\r\n`","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0'},\r\n  I: {\r\n    shape: [\r\n              [0, 'I', 0, 0], \r\n              [0, 'I', 0, 0],\r\n              [0, 'I', 0, 0], \r\n              [0, 'I', 0, 0]\r\n            ], \r\n    color: '80, 227, 230' \r\n  }, \r\n  J: {\r\n    shape: [\r\n              [0, 'J', 0], \r\n              [0, 'J', 0],\r\n              ['J', 'J', 0], \r\n            ], \r\n    color: '36, 95, 223' \r\n  },\r\n  L: {\r\n    shape: [\r\n              [0, 'L', 0], \r\n              [0, 'L', 0],\r\n              [0, 'L', 'L'], \r\n            ], \r\n    color: '223, 173, 36' \r\n  },\r\n  O: {\r\n    shape: [\r\n              ['O', 'O'], \r\n              ['O', 'O'] \r\n            ], \r\n    color: '223, 217, 36' \r\n  },\r\n  S: {\r\n    shape: [\r\n              [0, 'S', 'S'], \r\n              ['S', 'S', 0],\r\n              [0, 0, 0]\r\n            ], \r\n    color: '48, 211, 56' \r\n  },\r\n  T: {\r\n    shape: [\r\n              ['T', 'T', 'T'],\r\n              [0, 'T', 0],\r\n              [0, 0, 0]\r\n            ], \r\n    color: '132, 61, 198' \r\n  },\r\n  Z: {\r\n    shape: [\r\n              ['Z', 'Z', 0], \r\n              [0, 'Z', 'Z'],\r\n              [0, 0, 0]\r\n            ], \r\n    color: '227, 78, 78' \r\n  }\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'IJLOSTZ';\r\n  const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)]\r\n  return TETROMINOS[randTetromino]\r\n}","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => (\r\n  <StyledCell type={type} color={TETROMINOS[type].color} />\r\n);\r\n\r\nexport default React.memo(Cell);","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(25vw / ${props => props.width})\r\n  );\r\n  grid-template-columns: repeat(${props => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 25vw;\r\n  background: #111;\r\n`","import React from 'react';\r\nimport Cell from './Cell';\r\nimport {StyledStage} from './styles/StyledStage';\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map(row => row.map((cell, index) => <Cell key={index} type={cell[0]} />))}\r\n  </StyledStage>\r\n);\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n`","import React from 'react';\r\nimport {StyledDisplay} from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n);\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledInfo = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px 10px 20px 20px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n`","import React from 'react';\r\nimport {StyledInfo} from './styles/StyledInfo';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n  <StyledInfo> \r\n        <div>Move: Left, Right</div>\r\n        <br/>\r\n        <div>Drop: Down</div>\r\n        <br/> \r\n        <div>Rotation: Up</div> \r\n  </StyledInfo>\r\n);\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`","import React from 'react';\r\nimport {StyledStartButton} from './styles/StyledStartButton'\r\n\r\nconst StartButton = ({ callback }) => (\r\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;","import styled from 'styled-components';\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #000;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () => (\r\n  Array.from(Array(STAGE_HEIGHT), () => \r\n    new Array(STAGE_WIDTH).fill([0, 'clear']))\r\n);\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (  !stage[y + player.pos.y + moveY] || \r\n              !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n              stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage())\r\n  const [rowsCleared, setRowsCleared] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = newStage => \r\n      newStage.reduce((acc, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1);\r\n          acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return acc;\r\n        }\r\n        acc.push(row);\r\n        return acc; \r\n      }, [])\r\n\r\n    const updateStage = (prevStage) => {\r\n\r\n      const newStage = prevStage.map(row => \r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n      );\r\n      \r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`\r\n            ];\r\n          }\r\n        });\r\n      });\r\n\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage)\r\n      }\r\n\r\n      return newStage\r\n    }\r\n\r\n    setStage(prev => updateStage(prev))\r\n\r\n  }, [player, resetPlayer])\r\n\r\n  return [stage, setStage, rowsCleared];\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0); \r\n    const [level, setLevel] = useState(0); \r\n    \r\n    const linePoints = [40, 100, 300, 1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        if (rowsCleared > 0) {\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n            setRows(prev => prev + rowsCleared);\r\n        }\r\n    }, [level, linePoints, rowsCleared])\r\n\r\n    useEffect(() => {\r\n        calcScore()\r\n    }, [score, calcScore, rowsCleared])\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel];\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport Info from './Info'\r\nimport StartButton from './StartButton';\r\n\r\n\r\nimport {StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris';\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\nimport { usePlayer } from '../Hooks/usePlayer';\r\nimport { useStage } from '../Hooks/useStage';\r\nimport { useInterval } from '../Hooks/useInterval'\r\nimport { useGameStatus } from '../Hooks/useGameStatus'\r\n\r\n\r\n\r\nconst Tetris = ({ callback }) => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n  const startGame = () => {\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setRows(0);\r\n    setLevel(0);\r\n  }\r\n\r\n  const movePlayer = (dir) => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 })\r\n    }\r\n  }\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1)\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1)\r\n      } else if (keyCode === 40) {\r\n        dropPlayer()\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const drop = () => {\r\n    if (rows > (level + 1)) {\r\n      setLevel(prev => prev + 1)\r\n      setDropTime(1000 / (level + 1) + 200)\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      if (player.pos.y < 1) {\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true })\r\n    }\r\n  }\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 40) {\r\n        setDropTime(1000 / (level + 1) + 200)\r\n      }\r\n    }\r\n  }\r\n\r\n  const dropPlayer = () => {\r\n    setDropTime(null);\r\n    drop();\r\n  }\r\n\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime)\r\n\r\n\r\n  return (\r\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={(e) => move(e)} onKeyUp={keyUp}>\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n          <aside>\r\n            {gameOver ? \r\n              ( <div>\r\n                  <Display text={`Score: ${score}`} />\r\n                  <Display gameOver={gameOver} text=\"Game Over\" />\r\n                </div>)\r\n              : ( <div>\r\n                  <Display text={`Score: ${score}`} />\r\n                  <Display text={`Rows: ${rows}`} />\r\n                  <Display text={`Level: ${level}`} />\r\n                  <Info />\r\n                </div>\r\n              )\r\n            }\r\n            <StartButton callback={startGame} />\r\n          </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  )\r\n};\r\n\r\nexport default Tetris;","import { useState, useCallback } from 'react';\r\n\r\nimport { randomTetromino, TETROMINOS } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers'\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const rotate = (matrix, dir) => {\r\n    \r\n    const rotatedTetro = matrix.map((_, index) => matrix.map(col => col[index]));\r\n\r\n    if (dir > 0) {\r\n      return rotatedTetro.map(row => row.reverse());\r\n    } else {\r\n      return rotatedTetro.reverse();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1))\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n        return;\r\n      }\r\n    }\r\n\r\n    setPlayer(clonedPlayer);\r\n  };\r\n  \r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided\r\n    }))\r\n  }\r\n  \r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer(prev => ({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false\r\n    }))\r\n  }, [])\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from 'react';\r\nimport './index.css'\r\nimport Tetris from './components/Tetris';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Tetris />\r\n  </div>\r\n)\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}